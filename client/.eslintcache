[{"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\index.js":"1","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\store.js":"2","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\App.js":"3","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\reducers\\rootReducer.js":"4","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\actions\\post.js":"5","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\PostsList.jsx":"6","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\PostDetails.jsx":"7","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\AddPostForm.jsx":"8","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\reducers\\post.js":"9","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\actions\\types.js":"10","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\api\\index.js":"11","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\Post.jsx":"12","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\EditPostForm.jsx":"13"},{"size":297,"mtime":1619002157860,"results":"14","hashOfConfig":"15"},{"size":267,"mtime":1619002157863,"results":"16","hashOfConfig":"15"},{"size":2374,"mtime":1619004151066,"results":"17","hashOfConfig":"15"},{"size":170,"mtime":1619002157862,"results":"18","hashOfConfig":"15"},{"size":1478,"mtime":1619002157849,"results":"19","hashOfConfig":"15"},{"size":1667,"mtime":1619002157856,"results":"20","hashOfConfig":"15"},{"size":4028,"mtime":1619002157855,"results":"21","hashOfConfig":"15"},{"size":5208,"mtime":1619002157852,"results":"22","hashOfConfig":"15"},{"size":1377,"mtime":1619002157861,"results":"23","hashOfConfig":"15"},{"size":220,"mtime":1619002157850,"results":"24","hashOfConfig":"15"},{"size":513,"mtime":1619004019721,"results":"25","hashOfConfig":"15"},{"size":2309,"mtime":1619002157854,"results":"26","hashOfConfig":"15"},{"size":4512,"mtime":1619002157853,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4b724",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\index.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\store.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\App.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\reducers\\rootReducer.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\actions\\post.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\PostsList.jsx",["56","57"],"import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useSelector } from 'react-redux'\r\nimport { Grid, Button } from '@material-ui/core'\r\nimport Post from './Post'\r\nimport gridFour from '../img/grid_four.svg'\r\nimport gridThree from '../img/grid_three.svg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layoutShifter: {\r\n        float: 'right',\r\n        margin: theme.spacing(2)\r\n    }\r\n}))\r\nconst PostsList = () => {\r\n\r\n    const posts = useSelector(state => state.posts.posts)\r\n\r\n    const [layout, setLayout] = useState('gridThree')\r\n\r\n    const calculateMd = () => {\r\n        return layout === 'gridThree' ? 4 : 3\r\n    }\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <div className={classes.layoutShifter}>\r\n                <Button variant='text' size='small' onClick={() => setLayout('gridThree')}>\r\n                    <img src={gridThree} style={{ background: layout === 'gridThree' ? '#ccc' : '' }} />\r\n                </Button>\r\n\r\n                <Button variant='text' size='small' onClick={() => setLayout('gridFour')}>\r\n                    <img src={gridFour} style={{ background: layout === 'gridFour' ? '#ccc' : '' }} />\r\n                </Button>\r\n            </div>\r\n            <Grid container spacing={2} alignContent=\"stretch\">\r\n                {posts.length > 0 &&\r\n                    posts.map((post) => (\r\n                        <Grid item key={post?._id} xs={6} md={calculateMd()}>\r\n                            <Post {...post} />\r\n                        </Grid>\r\n                    ))}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsList","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\PostDetails.jsx",["58","59"],"import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography, Paper, Divider, Button, Chip } from '@material-ui/core'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditPostForm from './EditPostForm'\r\nimport noImage from '../img/noimage.svg'\r\nimport { fetchSinglePost, deletePost } from '../actions/post'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        marginBottom: theme.spacing(8),\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        borderRadius: 5,\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    chip: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst PostDetails = ({ match, history, location }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = match.params\r\n\r\n    const currentPost = useSelector(state => state.posts.currentPost)\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const openEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const closeEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchSinglePost(id))\r\n    }, [dispatch])\r\n\r\n    const convertRelativeTime = (date) => {\r\n        return moment(date).fromNow()\r\n    }\r\n\r\n    const removePost = () => {\r\n        dispatch(deletePost(currentPost._id))\r\n        history.push('/posts')\r\n    }\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper className={classes.paper} elevation={0}>\r\n            {\r\n                editMode ? (\r\n                    <EditPostForm post={currentPost} closeEditMode={closeEditMode}/>\r\n                ) : (\r\n                        <div>\r\n                            <div>\r\n                                <div className={classes.header}>\r\n                                    <Typography variant='h5' gutterBottom>\r\n                                        {currentPost?.title}\r\n                                    </Typography>\r\n                                    <div>\r\n                                        <Button color='primary' variant='outlined' startIcon={<EditIcon />} onClick={openEditMode}>\r\n                                            Edit\r\n                        </Button>\r\n                                        {' '}\r\n                                        <Button color='secondary' variant='outlined' startIcon={<DeleteIcon />}\r\n                                            onClick={removePost}>\r\n                                            Delete\r\n                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Divider />\r\n\r\n                            <Typography variant='overline' gutterBottom>\r\n                                {currentPost?.subtitle}\r\n                            </Typography>\r\n                            <Typography variant='caption' component='p'>\r\n                                {convertRelativeTime(currentPost?.createdAt)}\r\n                            </Typography>\r\n                            <Chip label={` # ${currentPost?.tag}`} variant='outlined' className={classes.chip} />\r\n                            <div className={classes.content}>\r\n                                <img src={currentPost?.image || noImage} className={classes.image} />\r\n                                <Typography variant='body1'>\r\n                                    {currentPost?.content}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n            }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PostDetails\r\n","C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\AddPostForm.jsx",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\reducers\\post.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\actions\\types.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\api\\index.js",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\Post.jsx",[],"C:\\Users\\kayra\\Desktop\\github\\simple-blog\\client\\src\\components\\EditPostForm.jsx",[],{"ruleId":"60","severity":1,"message":"61","line":30,"column":21,"nodeType":"62","endLine":30,"endColumn":105},{"ruleId":"60","severity":1,"message":"61","line":34,"column":21,"nodeType":"62","endLine":34,"endColumn":103},{"ruleId":"63","severity":1,"message":"64","line":54,"column":8,"nodeType":"65","endLine":54,"endColumn":18,"suggestions":"66"},{"ruleId":"60","severity":1,"message":"61","line":101,"column":33,"nodeType":"62","endLine":101,"endColumn":102},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["67"],{"desc":"68","fix":"69"},"Update the dependencies array to be: [dispatch, id]",{"range":"70","text":"71"},[1497,1507],"[dispatch, id]"]